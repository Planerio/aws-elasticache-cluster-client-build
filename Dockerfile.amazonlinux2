FROM amazonlinux:2

SHELL ["/bin/bash", "-c"]

# can be 7.1 or later:
ARG PHP_VERSION=7.4
# set to 1 to enable:
ARG ENABLE_IGBINARY=0
# set to 1 to enable:
ARG ENABLE_MSGPACK=0
# set to 1 to enable:
ARG ENABLE_JSON=0

RUN yum -y update \
    && yum -y install yum-utils \
    && yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \
    && yum -y install https://rpms.remirepo.net/enterprise/remi-release-7.rpm \
    && yum-config-manager --enable remi-php`echo "$PHP_VERSION" | tr -d '.'`

RUN yum -y install php`echo "$PHP_VERSION" | tr -d '.'` php`echo "$PHP_VERSION" | tr -d '.'`-php-devel \
    && if [ $ENABLE_IGBINARY -eq 1 ]; then yum -y install php`echo "$PHP_VERSION" | tr -d '.'`-php-igbinary-devel; fi \
    && if [ $ENABLE_MSGPACK -eq 1 ]; then yum -y install php`echo "$PHP_VERSION" | tr -d '.'`-php-pecl-msgpack-devel; fi

RUN yum -y install patch make gcc gcc-c++ autoconf automake libtool

RUN echo "source scl_source enable php"`echo $PHP_VERSION | tr -d '.'` >> /root/.bash_profile
ENV BASH_ENV=/root/.bash_profile

RUN mkdir /build

COPY aws-elasticache-cluster-client-libmemcached /build/aws-elasticache-cluster-client-libmemcached
COPY aws-elasticache-cluster-client-memcached-for-php /build/aws-elasticache-cluster-client-memcached-for-php
COPY *.patch /build/

RUN cd /build/aws-elasticache-cluster-client-libmemcached \
    && for F in /build/*.patch; do patch -p1 -i "$F"; done \
    && autoreconf -i \
    && mkdir BUILD \
    && cd BUILD \
    && ../configure --prefix=/usr/local --with-pic --disable-sasl \
    && make -j`nproc` \
    && make install

RUN cd /build/aws-elasticache-cluster-client-memcached-for-php \
    && phpize \
    && ./configure \
        --with-pic \
        --disable-memcached-sasl \
        --enable-memcached-session \
        `if [ $ENABLE_JSON -eq 1 ]; then echo "--enable-memcached-json"; fi` \
        `if [ $ENABLE_MSGPACK -eq 1 ]; then echo "--enable-memcached-msgpack"; fi` \
        `if [ $ENABLE_IGBINARY -eq 1 ]; then echo "--enable-memcached-igbinary"; fi` \
    && sed -i "s#-lmemcachedutil#-Wl,-whole-archive /usr/local/lib/libmemcachedutil.a -Wl,-no-whole-archive#" Makefile \
    && sed -i "s#-lmemcached#-Wl,-whole-archive /usr/local/lib/libmemcached.a -Wl,-no-whole-archive#" Makefile \
    && make -j`nproc` \
    && make install

# clean slate for checks:
RUN rm -rf /build

# check that the PHP extension is statically linked to libmemcached:
RUN if ldd `find /opt/remi/ -name memcached.so` | grep memcached; then exit 1; fi

# check that the PHP extension can be loaded:
RUN php -v \
    && php -dextension=memcached.so -m | grep 'memcached' \
    && php -dextension=memcached.so -r 'new Memcached();' \
    && php -dextension=memcached.so -r 'if (!defined("Memcached::DYNAMIC_CLIENT_MODE")) exit(1);'

RUN mkdir -p /build/final \
    && cp -p `find /opt/remi/ -name memcached.so` /build/final/
